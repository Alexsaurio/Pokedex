{"version":3,"sources":["containers/searchBar/searchBar.jsx","axios/axios-poke.jsx","components/tipos/tipos.jsx","components/pokemon/pokemon.jsx","components/utils/au/au.jsx","components/utils/backdrop/backdrop.jsx","components/utils/modal/modal.jsx","components/habilidad/habilidad.jsx","components/estadisticas/estadisticas.jsx","containers/pokemonList/pokemonList.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["SearchBar","className","Grid","container","direction","justify","alignItems","FormControl","fullWidth","variant","color","InputLabel","htmlFor","OutlinedInput","onChange","this","props","Buscar","id","labelWidth","Component","instance","axios","create","baseURL","tipos","tipo1","tipo2","length","type","name","Pokemon","state","pokemon","imagen","buscarPokemon","datos","nextProps","axiosPoke","get","then","reponse","setState","data","sprites","front_default","types","catch","error","console","log","onClick","e","PokemonView","src","alt","aux","children","backdrop","show","clicked","Modal","nextState","modalClosed","habilidad","habilidades","modal","Object","keys","habi","reverse","map","igkey","Array","h","_","key","is_hidden","ability","estadisticas","stats","s","stat","base_stat","PokemonList","modalPokemonHandler","modalView","pokemonShow","imgFron","imgBack","back_default","abilities","pokemonView","peso","weight","altura","height","vistaModal","pokedex","PokeList","p","i","Show","Region","App","handleInputChange","event","value","target","pokeSearch","forEach","indexOf","push","pokeList","region","loading","handlerClickGeneration","bind","gen","pokemon_species","main_region","Lista","CircularProgress","disableShrink","Button","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.34a3ddaa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n\r\nclass SearchBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\">\r\n                    <FormControl className=\"Search_Form\" fullWidth variant=\"outlined\" color=\"secondary\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Buscador pokem√≥n</InputLabel>\r\n                        <OutlinedInput\r\n                            onChange={this.props.Buscar}\r\n                            id=\"outlined-adornment-amount\"\r\n                            labelWidth={140}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/',\r\n\r\n})\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nconst tipos = (props) => {\r\n\r\n    let tipo1 = \"\";\r\n    let tipo2 = \"\";\r\n    let tipos = <p>Sin tipos</p> ;\r\n    if (props.tipos.length === 1) {\r\n      tipo1 = props.tipos[0].type.name;\r\n      tipos = <p> <span className={tipo1}>{tipo1}</span></p>;\r\n    } else if (props.tipos.length === 2) {\r\n      tipo1 = props.tipos[0].type.name;\r\n      tipo2 = props.tipos[1].type.name;\r\n      tipos = <p> <span className={tipo1}>{tipo1}</span> <span className={tipo2}>{tipo2}</span></p>\r\n    }\r\n\r\n    return tipos\r\n};\r\n\r\nexport default tipos;","import React, { Component } from 'react';\r\n\r\nimport axiosPoke from '../../axios/axios-poke';\r\nimport Tipos from '../tipos/tipos';\r\n\r\nclass Pokemon extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokemon: [],\r\n      imagen: [],\r\n      tipos: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buscarPokemon(this.props.datos.name);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n      this.buscarPokemon(nextProps.datos.name);\r\n  }\r\n\r\n  buscarPokemon(pokemon){\r\n    axiosPoke.get('/pokemon/' + pokemon + '/')\r\n      .then(reponse => {\r\n        this.setState({ pokemon: reponse.data });\r\n        this.setState({ imagen: reponse.data.sprites.front_default });\r\n        this.setState({ tipos: this.state.pokemon.types });\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { pokemon }= this.state;\r\n\r\n    return (\r\n      <div className=\"Pokemon\" onClick={e => this.props.PokemonView(e, pokemon)}>\r\n        <p className=\"Nombre\">{pokemon.name}</p>\r\n        <img src={this.state.imagen} alt={pokemon.name} />\r\n        <Tipos tipos={this.state.tipos} />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokemon;","const aux = (props) => props.children ;\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nconst backdrop = (props) => {\r\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n};\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../au/au';\r\nimport Backdrop from '../backdrop/backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={this.props.show ? 'Modal ModalShow' : 'Modal ModalHide'}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Au from '../utils/au/au';\r\n\r\nconst habilidad = (props) => {\r\n\r\n    let habilidades = <p> Sin habilidades </p>\r\n    if (props.modal) {    \r\n\r\n        habilidades = Object.keys(props.habi)\r\n        .reverse().map(igkey => {\r\n            return [...Array(props.habi[igkey])].map((h, _) => {\r\n                return <Au key={igkey}>\r\n                    <p className=\"habi\"><strong>Habilidad { h.is_hidden ? \"Oculta\" : \"\"}: </strong> {h.ability.name} </p>\r\n                </Au>\r\n            });\r\n        });\r\n    }\r\n\r\n    return habilidades\r\n};\r\n\r\nexport default habilidad;","import React from 'react';\r\n\r\nimport Au from '../utils/au/au';\r\n\r\nconst estadisticas = (props) => {\r\n\r\n    let estadisticas = <p> Sin Estadisticas </p>\r\n    if (props.modal) {    \r\n\r\n        estadisticas = Object.keys(props.stats)\r\n        .reverse().map(igkey => {\r\n            return [...Array(props.stats[igkey])].map((s, _) => {\r\n                console.log(s);\r\n                return <Au key={igkey}>\r\n                    <p className=\"stat\"> <strong>{ s.stat.name }: </strong> {s.base_stat} </p>\r\n                </Au>\r\n            });\r\n        });\r\n    }\r\n\r\n    return estadisticas\r\n};\r\n\r\nexport default estadisticas;","import React, { Component } from 'react';\r\n\r\nimport Pokemon from '../../components/pokemon/pokemon';\r\nimport Au from '../../components/utils/au/au';\r\nimport Modal from '../../components/utils/modal/modal';\r\nimport Tipos from '../../components/tipos/tipos';\r\nimport Habilidad from '../../components/habilidad/habilidad';\r\nimport Estadisticas from '../../components/estadisticas/estadisticas'\r\n\r\nclass PokemonList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modalView: false,\r\n            pokemonView: [],\r\n        };\r\n    }\r\n\r\n    modalPokemonHandler = () => {\r\n        this.setState({ modalView: !this.state.modalView });\r\n    }\r\n\r\n    // modalCardCancelHandler = () => {\r\n    //     this.setState({ modalCard: false, pokemon: [] });\r\n    // }\r\n\r\n    pokemonShow = (e, pokemon) => {\r\n        let imgFron = pokemon.sprites.front_default;\r\n        let imgBack = pokemon.sprites.back_default;\r\n        let tipos = pokemon.types;\r\n        let habi = pokemon.abilities;\r\n        let stats = pokemon.stats;\r\n\r\n        this.setState({\r\n            pokemonView: {\r\n                name: pokemon.name,\r\n                imgFron: imgFron,\r\n                imgBack: imgBack,\r\n                peso: pokemon.weight / 10,\r\n                altura: pokemon.height / 10,\r\n                tipos: tipos,\r\n                habi: habi,\r\n                stats: stats\r\n            }\r\n        });\r\n        console.log(pokemon);\r\n        this.modalPokemonHandler();\r\n    }\r\n\r\n    render() {\r\n        const pokemon = this.state.pokemonView;\r\n        let vistaModal = <p>Sin pokemones </p>\r\n        let pokedex = Object.keys(this.props.PokeList)\r\n            .reverse().map(igkey => {\r\n                return [...Array(this.props.PokeList[igkey])].map((p, i) => {\r\n                    //console.log(igkey,this.props.PokeList.length);\r\n                    return <Au key={igkey}>\r\n                        <Pokemon datos={p} Show={this.modalView} PokemonView={this.pokemonShow} />\r\n                    </Au>\r\n                });\r\n            });\r\n\r\n        if (this.state.modalView) {\r\n            vistaModal = <div className=\"PokemonView\">\r\n                <h1>{pokemon.name}</h1>\r\n                <div className=\"Silueta\">\r\n                    <img src={pokemon.imgFron} alt={pokemon.name} />\r\n                    <img src={pokemon.imgBack} alt={pokemon.name} />\r\n                </div>\r\n                \r\n                <Tipos tipos={pokemon.tipos} />\r\n                <div>\r\n                    <h2>Peso</h2>\r\n                    <h2>Altura</h2>\r\n                    <br></br>\r\n                    <p className=\"date\">{pokemon.peso} kg</p>\r\n                    <p className=\"date\">{pokemon.altura} mts</p>\r\n                </div>\r\n                <Habilidad modal={this.state.modalView} habi={pokemon.habi} />\r\n\r\n                <h3>Estadisticas base</h3>\r\n                <Estadisticas modal={this.state.modalView} stats={pokemon.stats} />\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Lista de pokemons: <strong> {this.props.Region} </strong> </h1>\r\n                {pokedex}\r\n                <Modal\r\n                    show={this.state.modalView}\r\n                    modalClosed={this.modalPokemonHandler}>\r\n                        {vistaModal}\r\n\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PokemonList;","import React, { Component } from 'react';\r\n\r\nimport SearchBar from '../containers/searchBar/searchBar';\r\nimport PokemonList from '../containers/pokemonList/pokemonList';\r\nimport axiosPoke from '../axios/axios-poke';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pokeList: [],\r\n      pokeSearch: [],\r\n      region: \"Sin region\",\r\n      loading: true,\r\n    };\r\n\r\n    this.handlerClickGeneration = this.handlerClickGeneration.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handlerClickGeneration(1);\r\n    this.setState({loading:false});\r\n  }\r\n\r\n  handlerClickGeneration(gen) {\r\n    this.setState({loading:true});\r\n    axiosPoke.get('/generation/' + gen + '/')\r\n    //axiosPoke.get('/generation/' + gen + '/')\r\n      .then(reponse => {\r\n        this.setState({ \r\n          pokeList: reponse.data.pokemon_species,\r\n          pokeSearch: reponse.data.pokemon_species,\r\n          region: reponse.data.main_region.name,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { value } = event.target;\r\n\r\n    let pokeSearch = [];\r\n    this.state.pokeSearch.forEach((pokemon) => {\r\n       if (pokemon.name.indexOf(value) !== -1) {\r\n         pokeSearch.push(pokemon);\r\n         return;\r\n       }\r\n    });\r\n    this.setState({ \r\n      pokeList: pokeSearch\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    let Lista = <CircularProgress disableShrink color=\"secondary\" />;\r\n    //let Lista = <LinearProgress variant=\"query\" color=\"secondary\" />\r\n    if (!loading) {\r\n      Lista = <PokemonList Region={ this.state.region } PokeList={this.state.pokeList} />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar Buscar={e => this.handleInputChange(e)}/>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\">\r\n          <Button variant=\"outlined\" onClick={() => this.handlerClickGeneration(1)}> Generacion I</Button> \r\n          <Button variant=\"outlined\" onClick={() => this.handlerClickGeneration(2)}> Generacion II</Button>\r\n          <Button variant=\"outlined\" onClick={() => this.handlerClickGeneration(3)}> Generacion III</Button>\r\n          <Button variant=\"outlined\" onClick={() => this.handlerClickGeneration(4)}> Generacion IV</Button>\r\n        </Grid>\r\n        \r\n        {Lista}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/main.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}